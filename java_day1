/*
package test1;

import java.util.Scanner;

public class hello2
{

	public static void main(String[] args) 
	{
		
		Scanner s = new Scanner(System.in);
		
		int n = s.nextInt(), sum=0;
		String num = s.next();
		
		for(int i=0; i<n; i++)
		{
			sum += num.charAt(i)-'0';
			System.out.println(num.charAt(i) + " " + sum);
		}
		System.out.println(sum);
		s.close();
	}

}
*/
/*
 * 문자와 숫자
package test1;

import java.util.Scanner;

public class hello2
{

	public static void main(String[] args) 
	{
		
		Scanner s = new Scanner(System.in);
		
		String num = s.nextLine();
		char[] snum = num.toCharArray();
		int sum = 0;
		
		for(int i=0; i<num.length(); i++)
		{
			sum += snum[i]-'0';
		}
		System.out.println(sum);
		s.close();
	}

}
*/
/*
 최댓값 구하기
package test1;

import java.util.Scanner;

public class hello2
{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		int n = input.nextInt(), score; 
		double sum=0, max = 0;
		for(int i =0; i<n; i++)
		{
			score = input.nextInt();
			if(score > max) max = score;
			sum += score;
		}
		System.out.println((sum/max*100)/n);
		input.close();
	}
}
*/
/*
 구간 배열 합
package test1;

import java.util.Scanner;

public class hello2
{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		int n = input.nextInt(), tc = input.nextInt();
		int S[] = new int[n];
		int sum=0, A = 0;
		for(int i=0; i<n; i++)
		{
			A = input.nextInt();
			if(i==0) S[i] = A; 
			else S[i] = S[i-1] + A;
		}
		
		for(int i=0; i<tc; i++)
		{
			int start = input.nextInt();
			int end = input.nextInt();
			if (start-2<0) sum = S[end-1];
			else sum = S[end-1] - S[start-2];
			System.out.println(sum);
		}
		input.close();
	}
}
*/
/*
 * 2차원 배열 부분합
package test1;

import java.util.Scanner;

public class hello2
{
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		int size = input.nextInt(), tc = input.nextInt();
		int map[][] = new int[size][size];
		int psum[][] = new int[size][size];
		
		for(int i=0; i<size; i++) for(int j=0; j<size; j++) map[i][j] = input.nextInt();
		
		psum[0][0] = map[0][0];
		
		for(int i=1; i<size; i++) psum[i][0] = psum[i-1][0] + map[i][0];
		for(int j=1; j<size; j++) psum[0][j] = psum[0][j-1] + map[0][j];
		for(int i=1; i<size; i++) for(int j=1; j<size; j++) psum[i][j] = psum[i-1][j] + psum[i][j-1] - psum[i-1][j-1] + map[i][j];
		
		for(int i=0; i<tc; i++)
		{
			int x1 = input.nextInt();
			int y1 = input.nextInt();
			int x2 = input.nextInt();
			int y2 = input.nextInt();
			
			if(x1-2 < 0 && y1-2 < 0) System.out.println(psum[x2-1][y2-1]);
			else if(x1-2<0) System.out.println(psum[x2-1][y2-1] - psum[x2-1][y1-2]);
			else if(y1-2<0) System.out.println(psum[x2-1][y2-1] - psum[x1-2][y2-1]);
			else System.out.println(psum[x2-1][y2-1] - psum[x2-1][y1-2] - psum[x1-2][y2-1] + psum[x1-2][y1-2]);
		}
		input.close();
	}
}

4 3
1 2 3 4
2 3 4 5
3 4 5 6
4 5 6 7

2 2 3 4
3 4 3 4
1 1 4 4
*/
